// This script wraps int, float, and string into Puppy classes.
// It is recommended to use these for basic types if references to them is required.
#ifnset STD_TYPE_WRAP
#set STD_TYPE_WRAP

#include std/std.puppy
enter std:
    map type_wrap:
        proc __initialize_failure:
            param tp val
            throw "Instance of " (repr_of tp) " initialization failed with argument " (repr_of val) "."
        proc __set_failure:
            param tp val
            throw "Setting value for instance of " (repr_of tp) " failed with argument " (repr_of val) "."

        class Int:
            attr val
            
            func init:
                param val
                if tpjudge.is_int val:
                    self.val = val
                else:
                    &__initialize_failure &Int val
            
            func set:
                param val
                if tpjudge.is_int val:
                    self.val = val
                else:
                    &__set_failure &Int val

        class Float:
            attr val
            
            func init:
                param val
                if tpjudge.is_float val:
                    self.val = val
                else:
                    &__initialize_failure &Float val
            
            func set:
                param val
                if tpjudge.is_float val:
                    self.val = val
                else:
                    &__set_failure &Float val

        class String:
            attr val
            
            func init:
                param val
                if tpjudge.is_str val:
                    self.val = val
                else:
                    &__initialize_failure &String val
            
            func set:
                param val
                if tpjudge.is_str val:
                    self.val = val
                else:
                    &__set_failure &String val

#ifnset STD_NO_ALIAS
    use type_wrap.Int
    use type_wrap.Float
    use type_wrap.String
#end

#end
